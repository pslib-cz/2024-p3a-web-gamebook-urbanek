// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stinsily.Server.Data;

#nullable disable

namespace stinsily.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241206183416_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("stinsily.Server.Models.ChoicesConnections", b =>
                {
                    b.Property<int>("ChoicesConnectionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FromSceneSceneID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RequiredItemID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SceneFrom")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SceneTo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ToSceneSceneID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChoicesConnectionsID");

                    b.HasIndex("FromSceneSceneID");

                    b.HasIndex("RequiredItemID");

                    b.HasIndex("ToSceneSceneID");

                    b.ToTable("ChoicesConnections", (string)null);
                });

            modelBuilder.Entity("stinsily.Server.Models.Items", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ForceModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HealthModifier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ObiWanRelationshipModifier")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemID");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("stinsily.Server.Models.MiniGames", b =>
                {
                    b.Property<int>("MiniGameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MiniGameID");

                    b.ToTable("MiniGames", (string)null);
                });

            modelBuilder.Entity("stinsily.Server.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Force")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObiWanRelationship")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerID");

                    b.HasIndex("UserID");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("stinsily.Server.Models.Scenes", b =>
                {
                    b.Property<int>("SceneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MiniGameID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SceneID");

                    b.HasIndex("MiniGameID");

                    b.ToTable("Scenes", (string)null);
                });

            modelBuilder.Entity("stinsily.Server.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("stinsily.Server.Models.ChoicesConnections", b =>
                {
                    b.HasOne("stinsily.Server.Models.Scenes", "FromScene")
                        .WithMany()
                        .HasForeignKey("FromSceneSceneID");

                    b.HasOne("stinsily.Server.Models.Items", "RequiredItem")
                        .WithMany()
                        .HasForeignKey("RequiredItemID");

                    b.HasOne("stinsily.Server.Models.Scenes", "ToScene")
                        .WithMany()
                        .HasForeignKey("ToSceneSceneID");

                    b.Navigation("FromScene");

                    b.Navigation("RequiredItem");

                    b.Navigation("ToScene");
                });

            modelBuilder.Entity("stinsily.Server.Models.Player", b =>
                {
                    b.HasOne("stinsily.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("stinsily.Server.Models.Scenes", b =>
                {
                    b.HasOne("stinsily.Server.Models.MiniGames", "MiniGame")
                        .WithMany()
                        .HasForeignKey("MiniGameID");

                    b.Navigation("MiniGame");
                });
#pragma warning restore 612, 618
        }
    }
}
